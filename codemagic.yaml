workflows:
  android-workflow:
    name: Android Workflow
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      groups:
        - keystore_credentials
      flutter: 2.8.1
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up key properties
        script: |
          echo $ANDROID_FIREBASE_SECRET > $FCI_BUILD_DIR/android/app/google-services.json
          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          # The following script creates key.properties file and stores the credentials in it. As we configure code signing in app/build.gradle file, the following part is unnecessary unless code signing is configured differently as explained in the documentation: https://docs.codemagic.io/flutter-code-signing/android-code-signing/
          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$FCI_KEYSTORE_PASSWORD
          keyPassword=$FCI_KEY_PASSWORD
          keyAlias=$FCI_KEY_ALIAS
          storeFile=/tmp/keystore.keystore
          EOF
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          cd . && flutter packages pub get
      # - name: Flutter analyze
      #   script: |
      #     cd . && flutter analyze
      # - name: Build APK with Flutter
      #   script: |
      #     cd . && flutter build apk --release
      # - name: Flutter Unit Test
      #   script: |
      #     mkdir -p unit-test-results-android
      #     flutter test test/counter_test.dart --machine > unit-test-results-android/flutter.json
      #     flutter test test --machine > unit-test-results-android/flutter2.json
      #     flutter test --machine > unit-test-results-android/flutter3.json
      #   test_report: unit-test-results-android/*.json
      #   ignore_failure: true
      # - name: Flutter Integration Tests Android
      #   script: |
      #     mkdir -p test-results-android
      #     flutter emulators --launch emulator &
      #     adb wait-for-device
      #     flutter -d emulator-5554 test --machine > test-results-android/flutter.json integration_test
      #   test_report: test-results-android/flutter.json
      #   ignore_failure: true
      - name: Flutter Integration Tests iOS using Drive
        script: |
          mkdir -p test-results-ios
          flutter devices
          xcrun simctl list
          xcrun simctl boot 99B14BF4-7966-4427-ACD1-34BFE4D26A01
          flutter devices
          flutter drive --driver=integration_test/widget_test.dart --target=integration_test/widget_test.dart -d 99B14BF4-7966-4427-ACD1-34BFE4D26A01 > test-results-ios/flutter.json
          flutter devices
        test_report: test-results-ios/flutter.json
        ignore_failure: true
      - name: Flutter Integration Tests iOS using D
        script: |
          flutter -d 99B14BF4-7966-4427-ACD1-34BFE4D26A01 test --machine > test-results-ios/flutter2.json integration_test
        test_report: test-results-ios/flutter2.json
        ignore_failure: true
      # - name: Flutter Drive Tests Android
      #   script: |
      #     flutter emulators --launch emulator &
      #     adb wait-for-device
      #     flutter drive --driver=test/widget_test.dart --target=test/widget_test.dart -d emulator-5554
      #   test_report: test-results-android/flutter.json
      #   ignore_failure: true
      # - name: Flutter Drive Tests iOS
      #   script: |
      #     flutter emulators --launch apple_ios_simulator
      #     flutter drive --driver=test/widget_test.dart --target=test/widget_test.dart -d iPhone 11
      #   test_report: test-results-ios/flutter.json
      #   ignore_failure: true
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
      - test-results-ios/*.json
      - screen.png
      - $HOME/Library/Developer/Xcode/DerivedData/**/Logs/Test/**/*.xcresult
      # - unit-test-results-android/*.json
    # publishing:
    #   firebase:
    #     firebase_token: $FIREBASE_TOKEN
    #     android:
    #       app_id: 1:391230974516:android:0c90036d3c5b25cb0df861
    #       groups:
    #         - androidTesters
  ios-workflow:
    name: iOS Workflow
    # instance_type: mac_mini
    max_build_duration: 120
    environment:
      groups:
        - app_store_credentials # <-- (Includes APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY, CERTIFICATE_PRIVATE_KEY) - https://docs.codemagic.io/code-signing-yaml/signing-ios/
        # - ios_config # <-- (Includes APP_STORE_ID)
        # Add the above group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
      vars:
        XCODE_WORKSPACE: 'Runner.xcworkspace'
        XCODE_SCHEME: 'Runner'
        BUNDLE_ID: io.codemagic.himeshapp
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Get Flutter packages
        script: |
          cd . && flutter packages pub get
      - name: Flutter analyze
        script: |
          cd . && flutter analyze
      - name: Flutter unit tests
        script: |
          cd . && flutter test
        ignore_failure: true
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release \
          --build-name=1.0.0 \
          --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1)) \
          --export-options-plist=/Users/builder/export_options.plist
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
