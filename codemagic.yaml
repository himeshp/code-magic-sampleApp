workflows:
  android-workflow:
    name: Android Workflow
    max_build_duration: 120
    environment:
      groups:
        # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
        - keystore_credentials # <-- (Includes FCI_KEYSTORE, FCI_KEYSTORE_PASSWORD, FCI_KEY_PASSWORD, FCI_KEY_ALIAS)
          # FCI_KEYSTORE <-- Put your keystore file here
          # FCI_KEYSTORE_PASSWORD <-- Put your keystore password here
          # FCI_KEY_PASSWORD <-- Put your keystore alias password here
          # FCI_KEY_ALIAS <-- Put your keystore alias username here
        - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS - Put your google-services.json here)
        - other
      vars:
        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
        PACKAGE_NAME: 'io.codemagic.flutteryaml' # <-- Put your package name here
        GOOGLE_PLAY_TRACK: 'alpha' # <-- This must be "alpha" or above.
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up key properties
        script: |
          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          # The following script creates key.properties file and stores the credentials in it. As we configure code signing in app/build.gradle file, the following part is unnecessary unless code signing is configured differently as explained in the documentation: https://docs.codemagic.io/flutter-code-signing/android-code-signing/
          # cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
          # storePassword=$FCI_KEYSTORE_PASSWORD
          # keyPassword=$FCI_KEY_PASSWORD
          # keyAlias=$FCI_KEY_ALIAS
          # storeFile=/tmp/keystore.keystore
          # EOF
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          cd . && flutter packages pub get
      - name: Flutter analyze
        script: |
          cd . && flutter analyze
      - name: Build APK with Flutter
        script: |
          cd . && flutter build apk --release --build-name=1.0.0 --build-number=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
      firebase:
        firebase_token: $FIREBASE_TOKEN
        android: app_id:1:391230974516:android:0c90036d3c5b25cb0df861
        groups:
          - androidTesters
        artifact_type: 'apk'
